{
  "info": {
    "_postman_id": "e9c74c19-d0d1-4e62-9a33-d7b3f1bd6b72",
    "name": "Ticketing System API",
    "description": "A RESTful API for a ticketing system built with Go, Gin framework, GORM ORM, and MySQL database.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/register",
              "host": ["{{base_url}}"],
              "path": ["register"]
            },
            "description": "Register a new user"
          },
          "response": []
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            },
            "description": "Login with email and password"
          },
          "response": []
        },
        {
          "name": "Register Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@example.com\",\n    \"password\": \"admin123\",\n    \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/register",
              "host": ["{{base_url}}"],
              "path": ["register"]
            },
            "description": "Register an admin user"
          },
          "response": []
        },
        {
          "name": "Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profile",
              "host": ["{{base_url}}"],
              "path": ["profile"]
            },
            "description": "Get the profile of the authenticated user"
          },
          "response": []
        }
      ],
      "description": "Authentication and user management endpoints"
    },
    {
      "name": "Events",
      "item": [
        {
          "name": "Get All Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["events"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get a list of all events with pagination"
          },
          "response": []
        },
        {
          "name": "Get Event By ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events/1",
              "host": ["{{base_url}}"],
              "path": ["events", "1"]
            },
            "description": "Get details of a specific event by its ID"
          },
          "response": []
        },
        {
          "name": "Create Event",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Conference 2023\",\n    \"description\": \"Annual tech conference\",\n    \"location\": \"Convention Center\",\n    \"start_date\": \"2023-12-01T09:00:00Z\",\n    \"end_date\": \"2023-12-03T18:00:00Z\",\n    \"capacity\": 500,\n    \"price\": 99.99,\n    \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/events",
              "host": ["{{base_url}}"],
              "path": ["events"]
            },
            "description": "Create a new event (Admin only)"
          },
          "response": []
        },
        {
          "name": "Update Event",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Conference 2023 (Updated)\",\n    \"description\": \"Annual tech conference with more speakers\",\n    \"location\": \"Convention Center\",\n    \"start_date\": \"2023-12-01T09:00:00Z\",\n    \"end_date\": \"2023-12-03T18:00:00Z\",\n    \"capacity\": 600,\n    \"price\": 119.99,\n    \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/events/1",
              "host": ["{{base_url}}"],
              "path": ["events", "1"]
            },
            "description": "Update an existing event (Admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Event",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/events/1",
              "host": ["{{base_url}}"],
              "path": ["events", "1"]
            },
            "description": "Delete an existing event (Admin only)"
          },
          "response": []
        }
      ],
      "description": "Event management endpoints"
    },
    {
      "name": "Tickets",
      "item": [
        {
          "name": "Get All Tickets",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tickets?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["tickets"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get a list of all tickets with pagination (admin sees all, user sees only their own)"
          },
          "response": []
        },
        {
          "name": "Get Ticket By ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tickets/1",
              "host": ["{{base_url}}"],
              "path": ["tickets", "1"]
            },
            "description": "Get details of a specific ticket by its ID"
          },
          "response": []
        },
        {
          "name": "Purchase Ticket",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"event_id\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/tickets",
              "host": ["{{base_url}}"],
              "path": ["tickets"]
            },
            "description": "Purchase a ticket for an event"
          },
          "response": []
        },
        {
          "name": "Cancel Ticket",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/tickets/1",
              "host": ["{{base_url}}"],
              "path": ["tickets", "1"]
            },
            "description": "Cancel a purchased ticket"
          },
          "response": []
        }
      ],
      "description": "Ticket management endpoints"
    },
    {
      "name": "Reports",
      "item": [
        {
          "name": "Get Sales Report",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reports/summary",
              "host": ["{{base_url}}"],
              "path": ["reports", "summary"]
            },
            "description": "Get a summary of ticket sales and revenue across all events"
          },
          "response": []
        },
        {
          "name": "Get Event Sales Report",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{admin_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reports/event/1",
              "host": ["{{base_url}}"],
              "path": ["reports", "event", "1"]
            },
            "description": "Get a summary of ticket sales and revenue for a specific event"
          },
          "response": []
        }
      ],
      "description": "Report generation endpoints (Admin only)"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "token",
      "value": "YOUR_USER_JWT_TOKEN",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "YOUR_ADMIN_JWT_TOKEN",
      "type": "string"
    }
  ]
}
